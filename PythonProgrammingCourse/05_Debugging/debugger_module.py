"""
#############################################################################
###  Author       : Sanjeet Prasad                                       ###
###  Email        : sanjeet8.23@gmail.com                                ###
###  Description  : Python debugger demo using pdb module and calculator ###
###                 module integration with conditional logic and break  ###
###  Created On   : 16-09-2023                                           ###
###  Interpreter  : Python 3.11.0                                        ###
#############################################################################
"""

import pdb                      # Python debugger module
import calc_module as calc      # Importing user-defined calculator module

def main():
    print("üöÄ Starting Python Debugger Demo\n")

    a = 10
    pdb.set_trace()  # üîç Breakpoint 1 ‚Äì inspect 'a'
    print("Value of a:", a)

    if a > 5:
        print("Condition Met ‚ûù a > 5")

    num1 = 100
    num2 = 10
    pdb.set_trace()  # üîç Breakpoint 2 ‚Äì inspect before division
    divide = num1 / num2
    print("Result of num1 / num2 =", divide)

    result = calc.sum(10, 20)  # Calling module function
    print("Sum from module:", result)

    # Nested condition with break point
    a = 40
    b = 10
    c = 20
    pdb.set_trace()  # üîç Breakpoint 3 ‚Äì inspect a, b, c
    if a > b:
        if a > c:
            print("‚úÖ a is the largest number")

if __name__ == "__main__":
    main()

"""
üß† Python Debugger Steps Recap:
1Ô∏è‚É£ import pdb
2Ô∏è‚É£ Add pdb.set_trace() where you suspect the issue
3Ô∏è‚É£ Use commands inside debugger: n (next), c (continue), s (step), l (list), q (quit), p variable
4Ô∏è‚É£ Debug, fix, then remove all pdb.set_trace() lines
"""